fa2c17f98e9471ecdaa098f80aebb266
'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var ColorPropType=require('ColorPropType');var ReactPropTypes=require('prop-types');var ViewStylePropTypes=require('ViewStylePropTypes');var TextStylePropTypes=_extends({},ViewStylePropTypes,{color:ColorPropType,fontFamily:ReactPropTypes.string,fontSize:ReactPropTypes.number,fontStyle:ReactPropTypes.oneOf(['normal','italic']),fontWeight:ReactPropTypes.oneOf(['normal','bold','100','200','300','400','500','600','700','800','900']),fontVariant:ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps','oldstyle-nums','lining-nums','tabular-nums','proportional-nums'])),textShadowOffset:ReactPropTypes.shape({width:ReactPropTypes.number,height:ReactPropTypes.number}),textShadowRadius:ReactPropTypes.number,textShadowColor:ColorPropType,letterSpacing:ReactPropTypes.number,lineHeight:ReactPropTypes.number,textAlign:ReactPropTypes.oneOf(['auto','left','right','center','justify']),textAlignVertical:ReactPropTypes.oneOf(['auto','top','bottom','center']),includeFontPadding:ReactPropTypes.bool,textDecorationLine:ReactPropTypes.oneOf(['none','underline','line-through','underline line-through']),textDecorationStyle:ReactPropTypes.oneOf(['solid','double','dotted','dashed']),textDecorationColor:ColorPropType,writingDirection:ReactPropTypes.oneOf(['auto','ltr','rtl'])});module.exports=TextStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRleHRTdHlsZVByb3BUeXBlcy5qcyJdLCJuYW1lcyI6WyJDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIlJlYWN0UHJvcFR5cGVzIiwiVmlld1N0eWxlUHJvcFR5cGVzIiwiVGV4dFN0eWxlUHJvcFR5cGVzIiwiY29sb3IiLCJmb250RmFtaWx5Iiwic3RyaW5nIiwiZm9udFNpemUiLCJudW1iZXIiLCJmb250U3R5bGUiLCJvbmVPZiIsImZvbnRXZWlnaHQiLCJmb250VmFyaWFudCIsImFycmF5T2YiLCJ0ZXh0U2hhZG93T2Zmc2V0Iiwic2hhcGUiLCJ3aWR0aCIsImhlaWdodCIsInRleHRTaGFkb3dSYWRpdXMiLCJ0ZXh0U2hhZG93Q29sb3IiLCJsZXR0ZXJTcGFjaW5nIiwibGluZUhlaWdodCIsInRleHRBbGlnbiIsInRleHRBbGlnblZlcnRpY2FsIiwiaW5jbHVkZUZvbnRQYWRkaW5nIiwiYm9vbCIsInRleHREZWNvcmF0aW9uTGluZSIsInRleHREZWNvcmF0aW9uU3R5bGUiLCJ0ZXh0RGVjb3JhdGlvbkNvbG9yIiwid3JpdGluZ0RpcmVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVdBLGEsZ09BRUEsR0FBTUEsZUFBZ0JDLFFBQVEsZUFBUixDQUF0QixDQUNBLEdBQU1DLGdCQUFpQkQsUUFBUSxZQUFSLENBQXZCLENBQ0EsR0FBTUUsb0JBQXFCRixRQUFRLG9CQUFSLENBQTNCLENBRUEsR0FBTUcsZ0NBQ0RELGtCQURDLEVBR0pFLE1BQU9MLGFBSEgsQ0FJSk0sV0FBWUosZUFBZUssTUFKdkIsQ0FLSkMsU0FBVU4sZUFBZU8sTUFMckIsQ0FNSkMsVUFBV1IsZUFBZVMsS0FBZixDQUFxQixDQUFDLFFBQUQsQ0FBVyxRQUFYLENBQXJCLENBTlAsQ0FZSkMsV0FBWVYsZUFBZVMsS0FBZixDQUNWLENBQUMsUUFBRCxDQUF1QixNQUF2QixDQUNDLEtBREQsQ0FDUSxLQURSLENBQ2UsS0FEZixDQUNzQixLQUR0QixDQUM2QixLQUQ3QixDQUNvQyxLQURwQyxDQUMyQyxLQUQzQyxDQUNrRCxLQURsRCxDQUN5RCxLQUR6RCxDQURVLENBWlIsQ0FtQkpFLFlBQWFYLGVBQWVZLE9BQWYsQ0FDWFosZUFBZVMsS0FBZixDQUFxQixDQUNuQixZQURtQixDQUVuQixlQUZtQixDQUduQixhQUhtQixDQUluQixjQUptQixDQUtuQixtQkFMbUIsQ0FBckIsQ0FEVyxDQW5CVCxDQTRCSkksaUJBQWtCYixlQUFlYyxLQUFmLENBQ2hCLENBQUNDLE1BQU9mLGVBQWVPLE1BQXZCLENBQStCUyxPQUFRaEIsZUFBZU8sTUFBdEQsQ0FEZ0IsQ0E1QmQsQ0ErQkpVLGlCQUFrQmpCLGVBQWVPLE1BL0I3QixDQWdDSlcsZ0JBQWlCcEIsYUFoQ2IsQ0FvQ0pxQixjQUFlbkIsZUFBZU8sTUFwQzFCLENBcUNKYSxXQUFZcEIsZUFBZU8sTUFyQ3ZCLENBMENKYyxVQUFXckIsZUFBZVMsS0FBZixDQUNULENBQUMsTUFBRCxDQUFxQixNQUFyQixDQUE2QixPQUE3QixDQUFzQyxRQUF0QyxDQUFnRCxTQUFoRCxDQURTLENBMUNQLENBZ0RKYSxrQkFBbUJ0QixlQUFlUyxLQUFmLENBQ2pCLENBQUMsTUFBRCxDQUFxQixLQUFyQixDQUE0QixRQUE1QixDQUFzQyxRQUF0QyxDQURpQixDQWhEZixDQXlESmMsbUJBQW9CdkIsZUFBZXdCLElBekQvQixDQTBESkMsbUJBQW9CekIsZUFBZVMsS0FBZixDQUNsQixDQUFDLE1BQUQsQ0FBcUIsV0FBckIsQ0FBa0MsY0FBbEMsQ0FBa0Qsd0JBQWxELENBRGtCLENBMURoQixDQWdFSmlCLG9CQUFxQjFCLGVBQWVTLEtBQWYsQ0FDbkIsQ0FBQyxPQUFELENBQXNCLFFBQXRCLENBQWdDLFFBQWhDLENBQXlDLFFBQXpDLENBRG1CLENBaEVqQixDQXNFSmtCLG9CQUFxQjdCLGFBdEVqQixDQTBFSjhCLGlCQUFrQjVCLGVBQWVTLEtBQWYsQ0FDaEIsQ0FBQyxNQUFELENBQXFCLEtBQXJCLENBQTRCLEtBQTVCLENBRGdCLENBMUVkLEVBQU4sQ0ErRUFvQixPQUFPQyxPQUFQLENBQWlCNUIsa0JBQWpCIiwiZmlsZSI6IlRleHRTdHlsZVByb3BUeXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgVGV4dFN0eWxlUHJvcFR5cGVzXG4gKiBAZmxvd1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbG9yUHJvcFR5cGUgPSByZXF1aXJlKCdDb2xvclByb3BUeXBlJyk7XG5jb25zdCBSZWFjdFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbmNvbnN0IFZpZXdTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ1ZpZXdTdHlsZVByb3BUeXBlcycpO1xuXG5jb25zdCBUZXh0U3R5bGVQcm9wVHlwZXMgPSB7XG4gIC4uLlZpZXdTdHlsZVByb3BUeXBlcyxcblxuICBjb2xvcjogQ29sb3JQcm9wVHlwZSxcbiAgZm9udEZhbWlseTogUmVhY3RQcm9wVHlwZXMuc3RyaW5nLFxuICBmb250U2l6ZTogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBmb250U3R5bGU6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFsnbm9ybWFsJywgJ2l0YWxpYyddKSxcbiAgLyoqXG4gICAqIFNwZWNpZmllcyBmb250IHdlaWdodC4gVGhlIHZhbHVlcyAnbm9ybWFsJyBhbmQgJ2JvbGQnIGFyZSBzdXBwb3J0ZWQgZm9yXG4gICAqIG1vc3QgZm9udHMuIE5vdCBhbGwgZm9udHMgaGF2ZSBhIHZhcmlhbnQgZm9yIGVhY2ggb2YgdGhlIG51bWVyaWMgdmFsdWVzLFxuICAgKiBpbiB0aGF0IGNhc2UgdGhlIGNsb3Nlc3Qgb25lIGlzIGNob3Nlbi5cbiAgICovXG4gIGZvbnRXZWlnaHQ6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFxuICAgIFsnbm9ybWFsJyAvKmRlZmF1bHQqLywgJ2JvbGQnLFxuICAgICAnMTAwJywgJzIwMCcsICczMDAnLCAnNDAwJywgJzUwMCcsICc2MDAnLCAnNzAwJywgJzgwMCcsICc5MDAnXVxuICApLFxuICAvKipcbiAgICogQHBsYXRmb3JtIGlvc1xuICAgKi9cbiAgZm9udFZhcmlhbnQ6IFJlYWN0UHJvcFR5cGVzLmFycmF5T2YoXG4gICAgUmVhY3RQcm9wVHlwZXMub25lT2YoW1xuICAgICAgJ3NtYWxsLWNhcHMnLFxuICAgICAgJ29sZHN0eWxlLW51bXMnLFxuICAgICAgJ2xpbmluZy1udW1zJyxcbiAgICAgICd0YWJ1bGFyLW51bXMnLFxuICAgICAgJ3Byb3BvcnRpb25hbC1udW1zJyxcbiAgICBdKVxuICApLFxuICB0ZXh0U2hhZG93T2Zmc2V0OiBSZWFjdFByb3BUeXBlcy5zaGFwZShcbiAgICB7d2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlciwgaGVpZ2h0OiBSZWFjdFByb3BUeXBlcy5udW1iZXJ9XG4gICksXG4gIHRleHRTaGFkb3dSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgdGV4dFNoYWRvd0NvbG9yOiBDb2xvclByb3BUeXBlLFxuICAvKipcbiAgICogQHBsYXRmb3JtIGlvc1xuICAgKi9cbiAgbGV0dGVyU3BhY2luZzogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBsaW5lSGVpZ2h0OiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgdGV4dCBhbGlnbm1lbnQuIFRoZSB2YWx1ZSAnanVzdGlmeScgaXMgb25seSBzdXBwb3J0ZWQgb24gaU9TIGFuZFxuICAgKiBmYWxsYmFja3MgdG8gYGxlZnRgIG9uIEFuZHJvaWQuXG4gICAqL1xuICB0ZXh0QWxpZ246IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFxuICAgIFsnYXV0bycgLypkZWZhdWx0Ki8sICdsZWZ0JywgJ3JpZ2h0JywgJ2NlbnRlcicsICdqdXN0aWZ5J11cbiAgKSxcbiAgLyoqXG4gICAqIEBwbGF0Zm9ybSBhbmRyb2lkXG4gICAqL1xuICB0ZXh0QWxpZ25WZXJ0aWNhbDogUmVhY3RQcm9wVHlwZXMub25lT2YoXG4gICAgWydhdXRvJyAvKmRlZmF1bHQqLywgJ3RvcCcsICdib3R0b20nLCAnY2VudGVyJ11cbiAgKSxcbiAgLyoqXG4gICAqIFNldCB0byBgZmFsc2VgIHRvIHJlbW92ZSBleHRyYSBmb250IHBhZGRpbmcgaW50ZW5kZWQgdG8gbWFrZSBzcGFjZSBmb3IgY2VydGFpbiBhc2NlbmRlcnMgLyBkZXNjZW5kZXJzLlxuICAgKiBXaXRoIHNvbWUgZm9udHMsIHRoaXMgcGFkZGluZyBjYW4gbWFrZSB0ZXh0IGxvb2sgc2xpZ2h0bHkgbWlzYWxpZ25lZCB3aGVuIGNlbnRlcmVkIHZlcnRpY2FsbHkuXG4gICAqIEZvciBiZXN0IHJlc3VsdHMgYWxzbyBzZXQgYHRleHRBbGlnblZlcnRpY2FsYCB0byBgY2VudGVyYC4gRGVmYXVsdCBpcyB0cnVlLlxuICAgKiBAcGxhdGZvcm0gYW5kcm9pZFxuICAgKi9cbiAgaW5jbHVkZUZvbnRQYWRkaW5nOiBSZWFjdFByb3BUeXBlcy5ib29sLFxuICB0ZXh0RGVjb3JhdGlvbkxpbmU6IFJlYWN0UHJvcFR5cGVzLm9uZU9mKFxuICAgIFsnbm9uZScgLypkZWZhdWx0Ki8sICd1bmRlcmxpbmUnLCAnbGluZS10aHJvdWdoJywgJ3VuZGVybGluZSBsaW5lLXRocm91Z2gnXVxuICApLFxuICAvKipcbiAgICogQHBsYXRmb3JtIGlvc1xuICAgKi9cbiAgdGV4dERlY29yYXRpb25TdHlsZTogUmVhY3RQcm9wVHlwZXMub25lT2YoXG4gICAgWydzb2xpZCcgLypkZWZhdWx0Ki8sICdkb3VibGUnLCAnZG90dGVkJywnZGFzaGVkJ11cbiAgKSxcbiAgLyoqXG4gICAqIEBwbGF0Zm9ybSBpb3NcbiAgICovXG4gIHRleHREZWNvcmF0aW9uQ29sb3I6IENvbG9yUHJvcFR5cGUsXG4gIC8qKlxuICAgKiBAcGxhdGZvcm0gaW9zXG4gICAqL1xuICB3cml0aW5nRGlyZWN0aW9uOiBSZWFjdFByb3BUeXBlcy5vbmVPZihcbiAgICBbJ2F1dG8nIC8qZGVmYXVsdCovLCAnbHRyJywgJ3J0bCddXG4gICksXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRleHRTdHlsZVByb3BUeXBlcztcbiJdfQ==
3f8895be8d6e75d7dd7fbe08dc33fa54
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var EventEmitter=require('EventEmitter');var EventSubscriptionVendor=require('EventSubscriptionVendor');function checkNativeEventModule(eventType){if(eventType){if(eventType.lastIndexOf('statusBar',0)===0){throw new Error('`'+eventType+'` event should be registered via the StatusBarIOS module');}if(eventType.lastIndexOf('keyboard',0)===0){throw new Error('`'+eventType+'` event should be registered via the Keyboard module');}if(eventType==='appStateDidChange'||eventType==='memoryWarning'){throw new Error('`'+eventType+'` event should be registered via the AppState module');}}}var RCTDeviceEventEmitter=function(_EventEmitter){_inherits(RCTDeviceEventEmitter,_EventEmitter);function RCTDeviceEventEmitter(){_classCallCheck(this,RCTDeviceEventEmitter);var sharedSubscriber=new EventSubscriptionVendor();var _this=_possibleConstructorReturn(this,(RCTDeviceEventEmitter.__proto__||Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this,sharedSubscriber));_this.sharedSubscriber=sharedSubscriber;return _this;}_createClass(RCTDeviceEventEmitter,[{key:'addListener',value:function addListener(eventType,listener,context){if(__DEV__){checkNativeEventModule(eventType);}return _get(RCTDeviceEventEmitter.prototype.__proto__||Object.getPrototypeOf(RCTDeviceEventEmitter.prototype),'addListener',this).call(this,eventType,listener,context);}},{key:'removeAllListeners',value:function removeAllListeners(eventType){if(__DEV__){checkNativeEventModule(eventType);}_get(RCTDeviceEventEmitter.prototype.__proto__||Object.getPrototypeOf(RCTDeviceEventEmitter.prototype),'removeAllListeners',this).call(this,eventType);}},{key:'removeSubscription',value:function removeSubscription(subscription){if(subscription.emitter!==this){subscription.emitter.removeSubscription(subscription);}else{_get(RCTDeviceEventEmitter.prototype.__proto__||Object.getPrototypeOf(RCTDeviceEventEmitter.prototype),'removeSubscription',this).call(this,subscription);}}}]);return RCTDeviceEventEmitter;}(EventEmitter);module.exports=new RCTDeviceEventEmitter();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJDVERldmljZUV2ZW50RW1pdHRlci5qcyJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiRXZlbnRTdWJzY3JpcHRpb25WZW5kb3IiLCJjaGVja05hdGl2ZUV2ZW50TW9kdWxlIiwiZXZlbnRUeXBlIiwibGFzdEluZGV4T2YiLCJFcnJvciIsIlJDVERldmljZUV2ZW50RW1pdHRlciIsInNoYXJlZFN1YnNjcmliZXIiLCJsaXN0ZW5lciIsImNvbnRleHQiLCJfX0RFVl9fIiwic3Vic2NyaXB0aW9uIiwiZW1pdHRlciIsInJlbW92ZVN1YnNjcmlwdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVdBLGEsNHREQUVBLEdBQU1BLGNBQWVDLFFBQVEsY0FBUixDQUFyQixDQUNBLEdBQU1DLHlCQUEwQkQsUUFBUSx5QkFBUixDQUFoQyxDQUlBLFFBQVNFLHVCQUFULENBQWdDQyxTQUFoQyxDQUFvRCxDQUNsRCxHQUFJQSxTQUFKLENBQWUsQ0FDYixHQUFJQSxVQUFVQyxXQUFWLENBQXNCLFdBQXRCLENBQW1DLENBQW5DLElBQTBDLENBQTlDLENBQWlELENBQy9DLEtBQU0sSUFBSUMsTUFBSixDQUFVLElBQU1GLFNBQU4sQ0FBa0IsMERBQTVCLENBQU4sQ0FDRCxDQUNELEdBQUlBLFVBQVVDLFdBQVYsQ0FBc0IsVUFBdEIsQ0FBa0MsQ0FBbEMsSUFBeUMsQ0FBN0MsQ0FBZ0QsQ0FDOUMsS0FBTSxJQUFJQyxNQUFKLENBQVUsSUFBTUYsU0FBTixDQUFrQixzREFBNUIsQ0FBTixDQUNELENBQ0QsR0FBSUEsWUFBYyxtQkFBZCxFQUFxQ0EsWUFBYyxlQUF2RCxDQUF3RSxDQUN0RSxLQUFNLElBQUlFLE1BQUosQ0FBVSxJQUFNRixTQUFOLENBQWtCLHNEQUE1QixDQUFOLENBQ0QsQ0FDRixDQUNGLEMsR0FNS0csc0Isd0VBSUosZ0NBQWMsNkNBQ1osR0FBTUMsa0JBQW1CLEdBQUlOLHdCQUFKLEVBQXpCLENBRFksb0lBRU5NLGdCQUZNLEdBR1osTUFBS0EsZ0JBQUwsQ0FBd0JBLGdCQUF4QixDQUhZLGFBSWIsQyxrRkFHV0osUyxDQUFtQkssUSxDQUFvQkMsTyxDQUF1QyxDQUN4RixHQUFJQyxPQUFKLENBQWEsQ0FDWFIsdUJBQXVCQyxTQUF2QixFQUNELENBQ0QsNElBQXlCQSxTQUF6QixDQUFvQ0ssUUFBcEMsQ0FBOENDLE9BQTlDLEVBQ0QsQyw4REFFa0JOLFMsQ0FBb0IsQ0FDckMsR0FBSU8sT0FBSixDQUFhLENBQ1hSLHVCQUF1QkMsU0FBdkIsRUFDRCxDQUNELDRJQUF5QkEsU0FBekIsRUFDRCxDLDhEQUVrQlEsWSxDQUFtQyxDQUNwRCxHQUFJQSxhQUFhQyxPQUFiLEdBQXlCLElBQTdCLENBQW1DLENBQ2pDRCxhQUFhQyxPQUFiLENBQXFCQyxrQkFBckIsQ0FBd0NGLFlBQXhDLEVBQ0QsQ0FGRCxJQUVPLENBQ0wsNElBQXlCQSxZQUF6QixFQUNELENBQ0YsQyxtQ0EvQmlDWixZLEVBa0NwQ2UsT0FBT0MsT0FBUCxDQUFpQixHQUFJVCxzQkFBSixFQUFqQiIsImZpbGUiOiJSQ1REZXZpY2VFdmVudEVtaXR0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJDVERldmljZUV2ZW50RW1pdHRlclxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdFdmVudEVtaXR0ZXInKTtcbmNvbnN0IEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yID0gcmVxdWlyZSgnRXZlbnRTdWJzY3JpcHRpb25WZW5kb3InKTtcblxuaW1wb3J0IHR5cGUgRW1pdHRlclN1YnNjcmlwdGlvbiBmcm9tICdFbWl0dGVyU3Vic2NyaXB0aW9uJztcblxuZnVuY3Rpb24gY2hlY2tOYXRpdmVFdmVudE1vZHVsZShldmVudFR5cGU6ID9zdHJpbmcpIHtcbiAgaWYgKGV2ZW50VHlwZSkge1xuICAgIGlmIChldmVudFR5cGUubGFzdEluZGV4T2YoJ3N0YXR1c0JhcicsIDApID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2AnICsgZXZlbnRUeXBlICsgJ2AgZXZlbnQgc2hvdWxkIGJlIHJlZ2lzdGVyZWQgdmlhIHRoZSBTdGF0dXNCYXJJT1MgbW9kdWxlJyk7XG4gICAgfVxuICAgIGlmIChldmVudFR5cGUubGFzdEluZGV4T2YoJ2tleWJvYXJkJywgMCkgPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYCcgKyBldmVudFR5cGUgKyAnYCBldmVudCBzaG91bGQgYmUgcmVnaXN0ZXJlZCB2aWEgdGhlIEtleWJvYXJkIG1vZHVsZScpO1xuICAgIH1cbiAgICBpZiAoZXZlbnRUeXBlID09PSAnYXBwU3RhdGVEaWRDaGFuZ2UnIHx8IGV2ZW50VHlwZSA9PT0gJ21lbW9yeVdhcm5pbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2AnICsgZXZlbnRUeXBlICsgJ2AgZXZlbnQgc2hvdWxkIGJlIHJlZ2lzdGVyZWQgdmlhIHRoZSBBcHBTdGF0ZSBtb2R1bGUnKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBEZXByZWNhdGVkIC0gc3ViY2xhc3MgTmF0aXZlRXZlbnRFbWl0dGVyIHRvIGNyZWF0ZSBncmFudWxhciBldmVudCBtb2R1bGVzIGluc3RlYWQgb2ZcbiAqIGFkZGluZyBhbGwgZXZlbnQgbGlzdGVuZXJzIGRpcmVjdGx5IHRvIFJDVERldmljZUV2ZW50RW1pdHRlci5cbiAqL1xuY2xhc3MgUkNURGV2aWNlRXZlbnRFbWl0dGVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcblxuICBzaGFyZWRTdWJzY3JpYmVyOiBFdmVudFN1YnNjcmlwdGlvblZlbmRvcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBzaGFyZWRTdWJzY3JpYmVyID0gbmV3IEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yKCk7XG4gICAgc3VwZXIoc2hhcmVkU3Vic2NyaWJlcik7XG4gICAgdGhpcy5zaGFyZWRTdWJzY3JpYmVyID0gc2hhcmVkU3Vic2NyaWJlcjtcbiAgfVxuXG5cbiAgYWRkTGlzdGVuZXIoZXZlbnRUeXBlOiBzdHJpbmcsIGxpc3RlbmVyOiBGdW5jdGlvbiwgY29udGV4dDogP09iamVjdCk6IEVtaXR0ZXJTdWJzY3JpcHRpb24ge1xuICAgIGlmIChfX0RFVl9fKSB7XG4gICAgICBjaGVja05hdGl2ZUV2ZW50TW9kdWxlKGV2ZW50VHlwZSk7XG4gICAgfVxuICAgIHJldHVybiBzdXBlci5hZGRMaXN0ZW5lcihldmVudFR5cGUsIGxpc3RlbmVyLCBjb250ZXh0KTtcbiAgfVxuXG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudFR5cGU6ID9zdHJpbmcpIHtcbiAgICBpZiAoX19ERVZfXykge1xuICAgICAgY2hlY2tOYXRpdmVFdmVudE1vZHVsZShldmVudFR5cGUpO1xuICAgIH1cbiAgICBzdXBlci5yZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnRUeXBlKTtcbiAgfVxuXG4gIHJlbW92ZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb246IEVtaXR0ZXJTdWJzY3JpcHRpb24pIHtcbiAgICBpZiAoc3Vic2NyaXB0aW9uLmVtaXR0ZXIgIT09IHRoaXMpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5lbWl0dGVyLnJlbW92ZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdXBlci5yZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgUkNURGV2aWNlRXZlbnRFbWl0dGVyKCk7XG4iXX0=
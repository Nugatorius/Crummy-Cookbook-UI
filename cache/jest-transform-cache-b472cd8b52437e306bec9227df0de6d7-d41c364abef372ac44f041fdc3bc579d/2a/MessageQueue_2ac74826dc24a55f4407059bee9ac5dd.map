{"version":3,"sources":["MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","JSTimers","MessageQueue","_lazyCallableModules","_queue","_successCallbacks","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","getTime","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","callFunctionReturnResultAndFlushedQueue","flushedQueue","invokeCallbackAndReturnFlushedQueue","module","method","args","__guard","__callFunction","result","cbID","__invokeCallback","__callImmediates","queue","length","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","JSON","stringify","now","nativeFlushQueueImmediate","_inCall","counterEvent","__spy","isFinite","type","methods","fn","error","reportFatalError","beginEvent","callImmediates","endEvent","moduleMethods","getCallableModule","apply","callID","callback","debug","errorMessage","profileName","spyOrToggle","prototype","console","log","info","exports"],"mappings":"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","file":"MessageQueue.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MessageQueue\n * @flow\n * @format\n */\n\n/*eslint no-bitwise: 0*/\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  args: any,\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\n// Work around an initialization order issue\nlet JSTimers = null;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [Array<number>, Array<number>, Array<any>, number];\n  _successCallbacks: Array<?Function>;\n  _failureCallbacks: Array<?Function>;\n  _callID: number;\n  _inCall: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n\n  _debugInfo: Object;\n  _remoteModuleTable: Object;\n  _remoteMethodTable: Object;\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = [];\n    this._failureCallbacks = [];\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = new Date().getTime();\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this: any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(\n      this,\n    );\n    (this: any).callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(\n      this,\n    );\n    (this: any).flushedQueue = this.flushedQueue.bind(this);\n    (this: any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(\n      this,\n    );\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  callFunctionReturnResultAndFlushedQueue(\n    module: string,\n    method: string,\n    args: Array<any>,\n  ) {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  }\n\n  invokeCallbackAndReturnFlushedQueue(cbID: number, args: Array<any>) {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue() {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime() {\n    return new Date().getTime() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: Array<any>,\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      onFail && params.push(this._callID << 1);\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Any params sent over the bridge should be encodable as JSON\n      JSON.stringify(params);\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = new Date().getTime();\n    if (\n      global.nativeFlushQueueImmediate &&\n      (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS ||\n        this._inCall === 0)\n    ) {\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: this._remoteModuleTable[moduleID],\n        method: this._remoteMethodTable[moduleID][methodID],\n        args: params,\n      });\n    } else if (this.__spy) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: moduleID + '',\n        method: methodID,\n        args: params,\n      });\n    }\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: Array<string>) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    this._inCall++;\n    try {\n      fn();\n    } catch (error) {\n      ErrorUtils.reportFatalError(error);\n    } finally {\n      this._inCall--;\n    }\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (!JSTimers) {\n      JSTimers = require('JSTimers');\n    }\n    JSTimers.callImmediates();\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n    Systrace.beginEvent(`${module}.${method}()`);\n    if (this.__spy) {\n      this.__spy({type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    const callID = cbID >>> 1;\n    const callback =\n      cbID & 1\n        ? this._successCallbacks[callID]\n        : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage =\n            `The callback ${method}() exists in module ${module}, ` +\n            'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(callback, errorMessage);\n      }\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID;\n      if (callback && this.__spy) {\n        this.__spy({type: TO_JS, module: null, method: profileName, args});\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks[callID] = this._failureCallbacks[callID] = null;\n    callback.apply(null, args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}